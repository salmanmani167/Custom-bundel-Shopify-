{% unless template == 'index' %}
{{ 'component-slideshow.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign social_icons = true
  if settings.social_facebook_link == blank and settings.social_instagram_link == blank and settings.social_youtube_link == blank and settings.social_tiktok_link == blank and settings.social_twitter_link == blank and settings.social_pinterest_link == blank and settings.social_snapchat_link == blank and settings.social_tumblr_link == blank and settings.social_vimeo_link == blank
    assign social_icons = false
  endif
  if section.settings.enable_country_selector or section.settings.enable_language_selector
    assign language_country_selector = true
  endif
  if section.blocks.size > 0
    assign announcement_bar = true
  endif
-%}

{% if social_icons %}
  {{ 'component-list-social.css' | asset_url | stylesheet_tag }}
{% endif %}

<div
  class="utility-bar color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator and section.blocks.size > 0 %} utility-bar--bottom-border{% elsif section.settings.show_line_separator and section.settings.show_social and social_icons%} utility-bar--bottom-border-social-only{% endif %}{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header-localization{% endif %}"
  {{ block.shopify_attributes }}
>
  <div class="page-width utility-bar__grid{% if announcement_bar and language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--3-col{% elsif language_country_selector or section.settings.show_social and social_icons %} utility-bar__grid--2-col{% endif %}">
    {%- if section.settings.show_social and social_icons -%}
      {%- render 'social-icons' -%}
    {%- endif -%}
    {%- if section.blocks.size == 1 -%}
      <div
        class="announcement-bar{% if section.settings.show_social %} announcement-bar--one-announcement{% endif %}"
        role="region"
        aria-label="{{ 'sections.header.announcement' | t }}"
        {{ block.shopify_attributes }}
      >
        {%- if section.blocks.first.settings.text != blank -%}
          {%- if section.blocks.first.settings.link != blank -%}
            <a
              href="{{ section.blocks.first.settings.link }}"
              class="announcement-bar__link link link--text focus-inset animate-arrow"
            >
          {%- endif -%}
          <p class="announcement-bar__message h5">
            <span>{{ section.blocks.first.settings.text | escape }}</span>
            {% if section.blocks.first.settings.hours != blank or section.blocks.first.settings.minutes != blank or section.blocks.first.settings.seconds != blank %}
              <div class="offer_box_countdown">
                <div class="timer-container" id="timerDisplay">
                  <div>
                    <input type="text" class="hrss" value="" disabled>
                    <p>HRS</p>
                  </div>
                  <span>:</span>
                  <div>
                    <input type="text" class="mins" value="" disabled>
                    <p>MIN</p>
                  </div>
                  <span>:</span>
                  <div>
                    <input type="text" class="secs" value="" disabled>
                    <p>SEC</p>
                  </div>
                </div>
              </div>
            {% endif %}
            {%- if section.blocks.first.settings.link != blank -%}
              {{- 'icon-arrow.svg' | inline_asset_content -}}
            {%- endif -%}
          </p>
          {%- if section.blocks.first.settings.link != blank -%}
            </a>
          {%- endif -%}
        {%- endif -%}
      </div>
    {%- elsif section.blocks.size > 1 -%}
      <slideshow-component
        class="announcement-bar"
        role="region"
        aria-roledescription="{{ 'sections.announcements.carousel' | t }}"
        aria-label="{{ 'sections.announcements.announcement_bar' | t }}"
      >
        <div class="announcement-bar-slider slider-buttons">
          <button
            type="button"
            class="slider-button slider-button--prev"
            name="previous"
            aria-label="{{ 'sections.announcements.previous_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
          <div
            class="grid grid--1-col slider slider--everywhere"
            id="Slider-{{ section.id }}"
            aria-live="polite"
            aria-atomic="true"
            data-autoplay="{{ section.settings.auto_rotate }}"
            data-speed="{{ section.settings.change_slides_speed }}"
          >
            {%- for block in section.blocks -%}
              <div
                class="slideshow__slide slider__slide grid__item grid--1-col"
                id="Slide-{{ section.id }}-{{ forloop.index }}"
                {{ block.shopify_attributes }}
                role="group"
                aria-roledescription="{{ 'sections.announcements.announcement' | t }}"
                aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                tabindex="-1"
              >
                <div
                  class="announcement-bar__announcement"
                  role="region"
                  aria-label="{{ 'sections.header.announcement' | t }}"
                  {{ block.shopify_attributes }}
                >
                  {%- if block.settings.text != blank -%}
                    {%- if block.settings.link != blank -%}
                      <a
                        href="{{ block.settings.link }}"
                        class="announcement-bar__link link link--text focus-inset animate-arrow"
                      >
                    {%- endif -%}
                    <p class="announcement-bar__message h5">
                      <span>{{ block.settings.text | escape }}</span>
                      {%- if block.settings.link != blank -%}
                        {{- 'icon-arrow.svg' | inline_asset_content -}}
                      {%- endif -%}
                    </p>
                    {%- if block.settings.link != blank -%}
                      </a>
                    {%- endif -%}
                  {%- endif -%}
                </div>
              </div>
            {%- endfor -%}
          </div>
          <button
            type="button"
            class="slider-button slider-button--next"
            name="next"
            aria-label="{{ 'sections.announcements.next_announcement' | t }}"
            aria-controls="Slider-{{ section.id }}"
          >
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </button>
        </div>
      </slideshow-component>
      {%- if request.design_mode -%}
        <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
        <style>
          /* theme editor power preview fix */
          .announcement-bar-slider .slider__slide[aria-hidden='true'] {
            visibility: hidden;
          }
        </style>
      {%- endif -%}
    {%- endif -%}
    <div class="localization-wrapper">
      {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
        <localization-form class="small-hide medium-hide">
          {%- form 'localization', id: 'AnnouncementCountryForm', class: 'localization-form' -%}
            <div>
              <h2 class="visually-hidden" id="AnnouncementCountryLabel">{{ 'localization.country_label' | t }}</h2>
              {%- render 'country-localization', localPosition: 'AnnouncementCountry' -%}
            </div>
          {%- endform -%}
        </localization-form>
      {% endif %}

      {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
        <localization-form class="small-hide medium-hide">
          {%- form 'localization', id: 'AnnouncementLanguageForm', class: 'localization-form' -%}
            <div>
              <h2 class="visually-hidden" id="AnnouncementLanguageLabel">{{ 'localization.language_label' | t }}</h2>
              {%- render 'language-localization', localPosition: 'AnnouncementLanguage' -%}
            </div>
          {%- endform -%}
        </localization-form>
      {%- endif -%}
    </div>
  </div>
</div>
{% assign hrs = section.blocks.first.settings.hours | plus:0 %}
{% assign min = section.blocks.first.settings.minutes | plus:0 %}
{% assign sec = section.blocks.first.settings.seconds | plus:0 %}

{% assign hrs = hrs | times: 60 %}
{% assign total_min = hrs | plus: min | plus:0 %}

{% assign total_sec = hrs | plus: min | plus:0 %}
{% assign total_sec = total_sec | times: 60 %}

<script>
$( document ).ready(function() {
  // Helper function to set a cookie with the timer data
  function setCookie(name, value, minutes) {
      const date = new Date();
      date.setTime(date.getTime() + (minutes * 60 * 1000));
      const expires = "expires=" + date.toUTCString();
      document.cookie = name + "=" + value + ";" + expires + ";path=/";
  }

  // Helper function to get a cookie by its name
  function getCookie(name) {
      const decodedCookie = decodeURIComponent(document.cookie);
      const cookies = decodedCookie.split(';');
      name = name + "=";
      console.log('name getCookie', name);
      for (let i = 0; i < cookies.length; i++) {
          let c = cookies[i];
          while (c.charAt(0) == ' ') {
              c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
              return c.substring(name.length, c.length);
          }
      }
      return "";
  }

  // Function to initialize or retrieve the timer from a cookie
  function checkTimerCookie() {
      let timerCookie = getCookie("timerCookie");
      let timer;
      console.log('check timerCookie', timerCookie);
      if (timerCookie != "") {
          timer = parseInt(timerCookie);
      } else {
          // Set initial timer value in seconds (50 minutes = 3000 seconds)
          timer = {{total_sec}}; // For example, starting with 50 minutes
          setCookie("timerCookie", timer, {{total_min}}); // Save initial cookie for 50 minutes
      }
      console.log("timer",timer);
      return timer;
  }

  // Function to format the timer into HH:MM:SS
  function formatTime(seconds) {
    console.log("formatTime called")

      let hours = Math.floor(seconds / 3600);
      let minutes = Math.floor((seconds % 3600) / 60);
      let secs = seconds % 60;
      // Format to always display two digits
      hours = hours < 10 ? "0" + hours : hours;
      minutes = minutes < 10 ? "0" + minutes : minutes;
      secs = secs < 10 ? "0" + secs : secs;
      var timerHTML = '<div>';
         timerHTML +='<input type="text" class="hrss" value="'+hours+'" disabled="">';
         timerHTML +='<p>HRS</p></div> <span>:</span> <div>';
         timerHTML +='<input type="text" class="mins" value="'+minutes+'" disabled="">';
         timerHTML +='<p>MIN</p></div> <span>:</span> <div>';
         timerHTML +='<input type="text" class="secs" value="'+secs+'" disabled="">';
         timerHTML +='<p>SEC</p>';
         timerHTML +='</div>';
         $('.offer_box_countdown').find('.hrss').val(hours);
        $('.offer_box_countdown').find('.mins').val(minutes);
        $('.offer_box_countdown').find('.secs').val(secs);
      //return hours + ":" + minutes + ":" + secs;
      return timerHTML;
  }

  // Function to start and handle the countdown
  function startCountdown() {
      let timer = checkTimerCookie(); // Get timer from cookie or initialize it
      console.log('strt timer', timer);
      const interval = setInterval(function () {
          // Update cookie every second
          if (timer > 0) {
              timer--;
              setCookie("timerCookie", timer, {{total_min}}); // Update the cookie value with the remaining time
          }
          // Update the display
          formatTime(timer);
         // document.getElementById("timerDisplay").innerHTML = formatTime(timer);

          // Reset the timer when it reaches 0
          if (timer <= 0) {
              clearInterval(interval);
              setCookie("timerCookie", {{ total_sec }}, {{total_min}}); // Reset timer to 50 minutes (3000 seconds)
              startCountdown(); // Restart the countdown
          }
      }, 1000); // Run every second
  }
  // Start countdown when the page loads
 window.onload = function () {
      startCountdown();
  };

});
</script>
  {% endunless %}
{% schema %}
{
  "name": "Home Page Announcment Bar",
  "max_blocks": 12,
  "class": "announcement-bar-section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-4"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__1.content",
      "info": "t:sections.announcement-bar.settings.header__1.info"
    },
    {
      "type": "checkbox",
      "id": "show_social",
      "default": false,
      "label": "t:sections.announcement-bar.settings.show_social.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__2.content"
    },
    {
      "type": "checkbox",
      "id": "auto_rotate",
      "label": "t:sections.announcement-bar.settings.auto_rotate.label",
      "default": false
    },
    {
      "type": "range",
      "id": "change_slides_speed",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "t:sections.announcement-bar.settings.change_slides_speed.label",
      "default": 5
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__3.content",
      "info": "t:sections.announcement-bar.settings.header__3.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.header__4.content",
      "info": "t:sections.announcement-bar.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.announcement-bar.settings.enable_language_selector.label"
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "t:sections.announcement-bar.blocks.announcement.settings.text.default",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        },
        {
          "type": "number",
          "id": "hours",
          "default": 6,
          "label": "Hours"
        },
        {
          "type": "number",
          "id": "minutes",
          "default": 6,
          "label": "Minutes",
        },
        {
          "type": "number",
          "id": "seconds",
          "default": 6,
          "label": "Seconds"
        },
      ]
    }
  ],
  "presets": [
    {
      "name": "Home Page Announcment Bar",
      "blocks": [
        {
          "type": "announcement"
        }
      ]
    }
  ]
}
{% endschema %}

